Terminals unused in grammar

    TOK_LETTER


Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | function TOK_TYPE TOK_IDENTIFIER TOK_LPAREN TOK_RPAREN TOK_LBRACE stmt_list TOK_RBRACE
    4         | %empty

    5 stmt: expr TOK_SEMI
    6     | TOK_RETURN expr TOK_SEMI
    7     | TOK_TYPE TOK_IDENTIFIER TOK_EQUALS expr TOK_SEMI
    8     | TOK_COUT TOK_STREAMOUTPUT expr TOK_SEMI
    9     | TOK_LBRACE stmt_list TOK_RBRACE

   10 stmt_list: stmt
   11          | stmt_list stmt

   12 expr: value TOK_ADD expr
   13     | value TOK_SUB expr
   14     | value TOK_MUL expr
   15     | value TOK_DIV expr
   16     | TOK_NEG expr
   17     | value

   18 value: TOK_IDENTIFIER
   19      | number

   20 number: TOK_UINT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOK_LBRACE (258) 3 9
    TOK_COUT (259) 8
    TOK_STREAMOUTPUT (260) 8
    TOK_RBRACE (261) 3 9
    TOK_RETURN (262) 6
    TOK_ADD (263) 12
    TOK_SUB (264) 13
    TOK_MUL (265) 14
    TOK_DIV (266) 15
    TOK_NEG (267) 16
    TOK_LPAREN (268) 3
    TOK_RPAREN (269) 3
    TOK_SEMI (270) 5 6 7 8
    TOK_LETTER (271)
    TOK_EQUALS (272) 7
    TOK_UINT <number> (273) 20
    TOK_TYPE <string> (274) 3 7
    TOK_IDENTIFIER <string> (275) 3 7 18


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    program (22)
        on left: 1
        on right: 0
    function (23)
        on left: 2 3 4
        on right: 1 2 3
    stmt (24)
        on left: 5 6 7 8 9
        on right: 2 10 11
    stmt_list (25)
        on left: 10 11
        on right: 3 9 11
    expr (26)
        on left: 12 13 14 15 16 17
        on right: 5 6 7 8 12 13 14 15 16
    value (27)
        on left: 18 19
        on right: 12 13 14 15 17
    number (28)
        on left: 20
        on right: 19


State 0

    0 $accept: . program $end

    $default  reduce using rule 4 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt
    3         | function . TOK_TYPE TOK_IDENTIFIER TOK_LPAREN TOK_RPAREN TOK_LBRACE stmt_list TOK_RBRACE

    TOK_LBRACE      shift, and go to state 4
    TOK_COUT        shift, and go to state 5
    TOK_RETURN      shift, and go to state 6
    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_TYPE        shift, and go to state 9
    TOK_IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 1 (program)

    stmt    go to state 11
    expr    go to state 12
    value   go to state 13
    number  go to state 14


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 stmt: TOK_LBRACE . stmt_list TOK_RBRACE

    TOK_LBRACE      shift, and go to state 4
    TOK_COUT        shift, and go to state 5
    TOK_RETURN      shift, and go to state 6
    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_TYPE        shift, and go to state 15
    TOK_IDENTIFIER  shift, and go to state 10

    stmt       go to state 16
    stmt_list  go to state 17
    expr       go to state 12
    value      go to state 13
    number     go to state 14


State 5

    8 stmt: TOK_COUT . TOK_STREAMOUTPUT expr TOK_SEMI

    TOK_STREAMOUTPUT  shift, and go to state 18


State 6

    6 stmt: TOK_RETURN . expr TOK_SEMI

    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_IDENTIFIER  shift, and go to state 10

    expr    go to state 19
    value   go to state 13
    number  go to state 14


State 7

   16 expr: TOK_NEG . expr

    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_IDENTIFIER  shift, and go to state 10

    expr    go to state 20
    value   go to state 13
    number  go to state 14


State 8

   20 number: TOK_UINT .

    $default  reduce using rule 20 (number)


State 9

    3 function: function TOK_TYPE . TOK_IDENTIFIER TOK_LPAREN TOK_RPAREN TOK_LBRACE stmt_list TOK_RBRACE
    7 stmt: TOK_TYPE . TOK_IDENTIFIER TOK_EQUALS expr TOK_SEMI

    TOK_IDENTIFIER  shift, and go to state 21


State 10

   18 value: TOK_IDENTIFIER .

    $default  reduce using rule 18 (value)


State 11

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 12

    5 stmt: expr . TOK_SEMI

    TOK_SEMI  shift, and go to state 22


State 13

   12 expr: value . TOK_ADD expr
   13     | value . TOK_SUB expr
   14     | value . TOK_MUL expr
   15     | value . TOK_DIV expr
   17     | value .

    TOK_ADD  shift, and go to state 23
    TOK_SUB  shift, and go to state 24
    TOK_MUL  shift, and go to state 25
    TOK_DIV  shift, and go to state 26

    $default  reduce using rule 17 (expr)


State 14

   19 value: number .

    $default  reduce using rule 19 (value)


State 15

    7 stmt: TOK_TYPE . TOK_IDENTIFIER TOK_EQUALS expr TOK_SEMI

    TOK_IDENTIFIER  shift, and go to state 27


State 16

   10 stmt_list: stmt .

    $default  reduce using rule 10 (stmt_list)


State 17

    9 stmt: TOK_LBRACE stmt_list . TOK_RBRACE
   11 stmt_list: stmt_list . stmt

    TOK_LBRACE      shift, and go to state 4
    TOK_COUT        shift, and go to state 5
    TOK_RBRACE      shift, and go to state 28
    TOK_RETURN      shift, and go to state 6
    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_TYPE        shift, and go to state 15
    TOK_IDENTIFIER  shift, and go to state 10

    stmt    go to state 29
    expr    go to state 12
    value   go to state 13
    number  go to state 14


State 18

    8 stmt: TOK_COUT TOK_STREAMOUTPUT . expr TOK_SEMI

    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_IDENTIFIER  shift, and go to state 10

    expr    go to state 30
    value   go to state 13
    number  go to state 14


State 19

    6 stmt: TOK_RETURN expr . TOK_SEMI

    TOK_SEMI  shift, and go to state 31


State 20

   16 expr: TOK_NEG expr .

    $default  reduce using rule 16 (expr)


State 21

    3 function: function TOK_TYPE TOK_IDENTIFIER . TOK_LPAREN TOK_RPAREN TOK_LBRACE stmt_list TOK_RBRACE
    7 stmt: TOK_TYPE TOK_IDENTIFIER . TOK_EQUALS expr TOK_SEMI

    TOK_LPAREN  shift, and go to state 32
    TOK_EQUALS  shift, and go to state 33


State 22

    5 stmt: expr TOK_SEMI .

    $default  reduce using rule 5 (stmt)


State 23

   12 expr: value TOK_ADD . expr

    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_IDENTIFIER  shift, and go to state 10

    expr    go to state 34
    value   go to state 13
    number  go to state 14


State 24

   13 expr: value TOK_SUB . expr

    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_IDENTIFIER  shift, and go to state 10

    expr    go to state 35
    value   go to state 13
    number  go to state 14


State 25

   14 expr: value TOK_MUL . expr

    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_IDENTIFIER  shift, and go to state 10

    expr    go to state 36
    value   go to state 13
    number  go to state 14


State 26

   15 expr: value TOK_DIV . expr

    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_IDENTIFIER  shift, and go to state 10

    expr    go to state 37
    value   go to state 13
    number  go to state 14


State 27

    7 stmt: TOK_TYPE TOK_IDENTIFIER . TOK_EQUALS expr TOK_SEMI

    TOK_EQUALS  shift, and go to state 33


State 28

    9 stmt: TOK_LBRACE stmt_list TOK_RBRACE .

    $default  reduce using rule 9 (stmt)


State 29

   11 stmt_list: stmt_list stmt .

    $default  reduce using rule 11 (stmt_list)


State 30

    8 stmt: TOK_COUT TOK_STREAMOUTPUT expr . TOK_SEMI

    TOK_SEMI  shift, and go to state 38


State 31

    6 stmt: TOK_RETURN expr TOK_SEMI .

    $default  reduce using rule 6 (stmt)


State 32

    3 function: function TOK_TYPE TOK_IDENTIFIER TOK_LPAREN . TOK_RPAREN TOK_LBRACE stmt_list TOK_RBRACE

    TOK_RPAREN  shift, and go to state 39


State 33

    7 stmt: TOK_TYPE TOK_IDENTIFIER TOK_EQUALS . expr TOK_SEMI

    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_IDENTIFIER  shift, and go to state 10

    expr    go to state 40
    value   go to state 13
    number  go to state 14


State 34

   12 expr: value TOK_ADD expr .

    $default  reduce using rule 12 (expr)


State 35

   13 expr: value TOK_SUB expr .

    $default  reduce using rule 13 (expr)


State 36

   14 expr: value TOK_MUL expr .

    $default  reduce using rule 14 (expr)


State 37

   15 expr: value TOK_DIV expr .

    $default  reduce using rule 15 (expr)


State 38

    8 stmt: TOK_COUT TOK_STREAMOUTPUT expr TOK_SEMI .

    $default  reduce using rule 8 (stmt)


State 39

    3 function: function TOK_TYPE TOK_IDENTIFIER TOK_LPAREN TOK_RPAREN . TOK_LBRACE stmt_list TOK_RBRACE

    TOK_LBRACE  shift, and go to state 41


State 40

    7 stmt: TOK_TYPE TOK_IDENTIFIER TOK_EQUALS expr . TOK_SEMI

    TOK_SEMI  shift, and go to state 42


State 41

    3 function: function TOK_TYPE TOK_IDENTIFIER TOK_LPAREN TOK_RPAREN TOK_LBRACE . stmt_list TOK_RBRACE

    TOK_LBRACE      shift, and go to state 4
    TOK_COUT        shift, and go to state 5
    TOK_RETURN      shift, and go to state 6
    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_TYPE        shift, and go to state 15
    TOK_IDENTIFIER  shift, and go to state 10

    stmt       go to state 16
    stmt_list  go to state 43
    expr       go to state 12
    value      go to state 13
    number     go to state 14


State 42

    7 stmt: TOK_TYPE TOK_IDENTIFIER TOK_EQUALS expr TOK_SEMI .

    $default  reduce using rule 7 (stmt)


State 43

    3 function: function TOK_TYPE TOK_IDENTIFIER TOK_LPAREN TOK_RPAREN TOK_LBRACE stmt_list . TOK_RBRACE
   11 stmt_list: stmt_list . stmt

    TOK_LBRACE      shift, and go to state 4
    TOK_COUT        shift, and go to state 5
    TOK_RBRACE      shift, and go to state 44
    TOK_RETURN      shift, and go to state 6
    TOK_NEG         shift, and go to state 7
    TOK_UINT        shift, and go to state 8
    TOK_TYPE        shift, and go to state 15
    TOK_IDENTIFIER  shift, and go to state 10

    stmt    go to state 29
    expr    go to state 12
    value   go to state 13
    number  go to state 14


State 44

    3 function: function TOK_TYPE TOK_IDENTIFIER TOK_LPAREN TOK_RPAREN TOK_LBRACE stmt_list TOK_RBRACE .

    $default  reduce using rule 3 (function)
